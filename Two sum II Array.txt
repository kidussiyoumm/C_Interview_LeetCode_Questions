Two Sum II Input Array is sorted.
Given a 1-indexed array of integers numbers that is already sorted in 
non-decreasing order, find two numbers such that they add up to a specific
 target number. Let these two numbers be numbers[index1] 
and numbers[index2] where 1 <= index1 < index2 <= numbers.length.

 public class soultion
    {
        static void Main()
        {
            soultion sol = new soultion();
            int[] numbers = { 2, 7, 11, 15 };
            int target = 13; 
            int[] result = sol.TwoSum(numbers, target);
            Console.WriteLine($"Indices: [{result[0]}, {result[1]}]");
        }

        public int[] TwoSum(int[] numbers, int target)
        {

            for(int i = 0; i < numbers.Length; i++)
            {
                for(int j = i+1; j < numbers.Length; j++)
                {
                   int sum = numbers[i] + numbers[j];

                    if (sum == target)
                    {
                        return new int[] { i+1, j+1 };
                         
                    }
                    
                }
            }

            return new int[] { -1, -1 };
          

        }

    }