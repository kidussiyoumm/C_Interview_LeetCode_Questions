Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.

 

Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]



public int[] TopKFrequent(int[] nums, int k)
        {
            int[] result = new int[k];
            Dictionary<int, int> dic = new Dictionary<int, int>();

            for (int i = 0; i < nums.Length; i++)
            {
                if (!dic.ContainsKey(nums[i]))
                {
                    dic.Add(nums[i], 1);
                }
                else
                {
                    dic[nums[i]]++;
                }
            }

            var ordered = dic.OrderByDescending(x => x.Value).Take(k).ToList();

            for (int i = 0; i < ordered.Count(); i++)
            {
                result[i] = ordered[i].Key;
            }

            return result;
        }