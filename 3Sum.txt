3sum





public class soultion
    {
        static void Main()
        {
            soultion sol = new soultion();
            int[] nums = {-4,-1,-1,0,1,2};
            var result = sol.ThreeSum(nums);
            
            foreach (var triplet in result)
            {
                Console.WriteLine($"[{string.Join(", ", triplet)}]");
            }

        }

        public IList<IList<int>> ThreeSum(int[] nums)
        {

            HashSet<List<int>> result = new HashSet<List<int>>();
          
            if (nums == null || nums.Length < 3)
            {
                return new List<IList<int>>();
            }
            Array.Sort(nums); //-4,-1,-1,0,1,2
           

            
            for(int i = 0; i < nums.Length-1; i++)
            {
                int left = i+1;
                int right = nums.Length - 1;
                int first = nums[i];
                
                if (i > 0 && nums[i] == nums[i - 1])
                {
                    continue;
                }
                while (left < right)
                {
                    int sum = first + nums[left] + nums[right];

                    if(sum == 0)
                    {
                        result.Add(new List<int> { nums[i], nums[left], nums[right]});
                        left++;
                    }
                    else if (sum > 0)
                    {
                        right--;
                    }
                    else
                    {
                        left++;
                    }
                }
            }

            return result.ToList<IList<int>>();
        }

    }