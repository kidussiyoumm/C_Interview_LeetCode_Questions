Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2

public class Solution {
    public int MajorityElement(int[] nums) {
        if(nums.Length == 0){
            return 0;

        }

      if (nums.Length == 0)
    {
        return 0;
    }

Dictionary<int, int> hash =  new Dictionary<int, int>();

foreach(int i in nums)
{
    

    if (hash.ContainsKey(i))
    {
        hash[i]++;
    }
    else
    {
        hash[i] = 1;
    }


    if (hash[i] > nums.Length / 2)
    {
        return i;
    }
}
return -1;

    }
}